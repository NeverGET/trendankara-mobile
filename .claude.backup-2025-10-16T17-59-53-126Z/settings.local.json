{
  "permissions": {
    "allow": [
      "Bash(claude-code-spec-workflow get-content:*)",
      "Bash(claude-code-spec-workflow get-steering-context:*)",
      "Bash(claude-code-spec-workflow get-spec-context:*)",
      "Bash(claude-code-spec-workflow get-tasks:*)",
      "Bash(npx tsc:*)",
      "Bash(claude-code-spec-workflow --help)",
      "Bash(npx expo:*)",
      "Bash(npx:*)",
      "Bash(claude-code-spec-workflow get-specs:*)",
      "Bash(npm run lint)",
      "Bash(expo lint:*)",
      "Bash(for i in {1..18})",
      "Bash(do claude-code-spec-workflow get-tasks:*)",
      "Bash(done)",
      "Bash(npm install:*)",
      "Bash(for:*)",
      "Bash(claude-code-spec-workflow get-template-context:*)",
      "Bash(npm info:*)",
      "WebSearch",
      "Bash(node:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npm run lint:*)",
      "WebFetch(domain:docs.expo.dev)",
      "Bash(npm test:*)",
      "Bash(cat:*)",
      "Bash(adb:*)",
      "Bash(curl:*)",
      "Bash(/dev/null)",
      "Bash(pkill:*)",
      "Bash(nc:*)",
      "Bash(context7 search \"expo native media controls audio playback notification android ios\")",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(nslookup:*)",
      "Bash(context7 search \"expo-av Audio.setNowPlayingInfoAsync native media controls\")",
      "Bash(eas build:configure)",
      "Bash(eas build:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(npm run android:install:*)",
      "Bash(npm run android:install-clean:*)",
      "Bash(shellcheck:*)",
      "Read(//var/folders/tc/w9p4wh09393b3j8p_14b_y4h0000gn/T/TemporaryItems/NSIRD_screencaptureui_D9iZnx/**)",
      "Bash(awk:*)",
      "Bash(xcrun xctrace:*)",
      "Bash(xcrun devicectl list:*)",
      "Bash(EXPO_DEVTOOLS_LISTEN_ADDRESS=192.168.1.133 npx expo start --host tunnel)",
      "Bash(kill:*)",
      "Bash(grep:*)",
      "Bash(npm run test:icons:*)",
      "Bash(npm run generate-icons:*)",
      "Bash(npm run build:icons:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(brew link:*)",
      "Bash(brew unlink:*)",
      "Bash(export:*)",
      "Bash(pod install:*)",
      "Bash(gem install:*)",
      "Bash(brew reinstall:*)",
      "Bash(/opt/homebrew/bin/pod install --repo-update)",
      "Bash(xcodebuild:*)",
      "Bash(xcrun devicectl device install:*)",
      "Bash(ios-deploy:*)",
      "Bash(brew install:*)",
      "Bash(./gradlew:*)",
      "Bash(do claude-code-spec-workflow mark-task-complete mobile-app-implementation $i)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(npm ls:*)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo start --clear)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:android)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:android --device 28051FDH3005RT)",
      "Bash(openssl s_client:*)",
      "Bash(openssl x509:*)",
      "Bash(ssh root@82.29.169.180)",
      "Bash(ssh root@82.29.169.180 'nginx -v 2>&1 || apache2 -v 2>&1 || echo \"\"Checking other web servers...\"\"; systemctl list-units --type=service --state=running | grep -E \"\"(nginx|apache|httpd)\"\"')",
      "Bash(ssh root@82.29.169.180 'find /etc/nginx -name \"\"*.conf\"\" -exec grep -l \"\"trendankara\"\" {} \\;')",
      "Bash(ssh root@82.29.169.180 'cat /etc/nginx/sites-available/trendankara')",
      "Bash(ssh root@82.29.169.180 'ls -la /etc/nginx/ssl/ && echo \"\"=== Current certificate ===\"\" && openssl x509 -in /etc/nginx/ssl/trendankara.crt -text -noout | grep -A2 \"\"Issuer\\|Subject\"\"')",
      "Bash(ssh root@82.29.169.180 'cd /etc/nginx/ssl && wget -O intermediate.cer \"\"http://cert.ssl.com/TrustSafe-TLS-I-RSA-R1.cer\"\" && echo \"\"Downloaded intermediate certificate\"\"')",
      "Bash(ssh root@82.29.169.180 'cd /etc/nginx/ssl && openssl x509 -inform DER -in intermediate.cer -outform PEM -out intermediate.pem && echo \"\"Converted intermediate certificate to PEM format\"\"')",
      "Bash(ssh root@82.29.169.180 'sed -i \"\"s|ssl_certificate /etc/nginx/ssl/trendankara.crt;|ssl_certificate /etc/nginx/ssl/trendankara_fullchain.crt;|\"\" /etc/nginx/sites-available/trendankara && echo \"\"Updated nginx configuration to use full certificate chain\"\"')",
      "Bash(ssh:*)",
      "Bash(npm cache clean:*)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 1)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 2)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 3)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 4)",
      "Bash(.claude/commands/gcp-proxy-gateway/task-4.sh:*)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 5)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway 6)",
      "Bash(claude-code-spec-workflow mark-task-complete gcp-proxy-gateway all)",
      "Bash(gcloud auth:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud projects describe:*)",
      "Bash(gcloud services enable:*)",
      "Bash(PROXY_URL=https://europe-west3-kapitel-h.cloudfunctions.net/trendankara-proxy npm run test:proxy)",
      "Bash(gcloud functions logs read:*)",
      "Bash(PROXY_URL=https://europe-west3-kapitel-h.cloudfunctions.net/trendankara-proxy npm run test:verify)",
      "Bash(gcloud logging read:*)",
      "Bash(killall:*)",
      "Bash(python3:*)",
      "Bash(time curl:*)",
      "Bash(gcloud functions describe:*)",
      "Bash(/bashes)",
      "Read(//var/folders/tc/w9p4wh09393b3j8p_14b_y4h0000gn/T/TemporaryItems/NSIRD_screencaptureui_EHTqbH/**)",
      "Read(//var/folders/tc/w9p4wh09393b3j8p_14b_y4h0000gn/T/TemporaryItems/NSIRD_screencaptureui_AawuGc/**)",
      "Read(//Users/cemalkurt/Projects/trendankara/webapp/**)",
      "Bash(xcrun simctl list:*)",
      "Bash(./android/gradlew:*)",
      "Bash(emulator:*)",
      "Bash(eas credentials:*)",
      "Bash(eas whoami:*)",
      "Read(//Users/cemalkurt/Desktop/**)",
      "Read(//var/folders/tc/w9p4wh09393b3j8p_14b_y4h0000gn/T/TemporaryItems/NSIRD_screencaptureui_3t0YCE/**)",
      "Read(//Users/cemalkurt/Projects/trendankara/**)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:ios --device)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:ios --device 66B4ABCF-9CA4-5577-AE66-EA3DC1189790)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:ios --device \"iPhone\")",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo start --tunnel)",
      "Bash(EXPO_DEVTOOLS_LISTEN_ADDRESS=192.168.6.166 REACT_DEVTOOLS_PORT=0 npx expo start --clear)",
      "Bash(tee:*)",
      "Read(//private/tmp/**)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:ios --device \"iPhone\" --configuration Release)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:android --device 28051FDH3005RT --variant release)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:android --device)",
      "Bash(ANDROID_SERIAL=28051FDH3005RT REACT_DEVTOOLS_PORT=0 npx expo run:android)",
      "WebFetch(domain:rntp.dev)",
      "WebFetch(domain:github.com)",
      "Bash(yes)",
      "Bash(npm uninstall:*)",
      "Bash(xcrun xcodebuild:*)",
      "Bash(security find-identity:*)",
      "Bash(security find-certificate:*)",
      "Bash(tr:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:android --device emulator-5554)",
      "Read(//Users/cemalkurt/Downloads/**)",
      "Bash(find:*)",
      "Read(//tmp/**)",
      "Bash(defaults write:*)",
      "Bash(REACT_DEVTOOLS_PORT=0 npx expo run:ios --device bf683ce532d8e60ae1066a79d8dcd007ef040719)",
      "Bash(sqlite3:*)"
    ],
    "deny": [],
    "ask": []
  }
}
